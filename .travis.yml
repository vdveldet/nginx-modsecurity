sudo: required
language: python

services:
  - docker

matrix:
  include:
  - python:
    env:
      - NAME="NGINX Container"
      - RUN_IMAGE_NAME=nginx-modsecurity
      - RUN_IMAGE_NAME_COMPILE=modsecurity-compile
      - IMAGE_NAME=vdveldet/nginx-modsecurity
      - IMAGE_COMPILE=nginx-compile
      - DOCKERFILE_COMPILE=Dockerfile_compile_debian
      - DOCKERFILE=Dockerfile_debian
      - VERSION=0.16
      - NGINX_VERSION=1.17.3
      - NGINX_FULL_VERSION=1.17.3-1+ubuntu18.04.1+deb.sury.org+1
      - MODSECURITY=3.0
      - MODSECURITY_RELEASE=3

install: true

script: pytest || true ? # This is needed for the build to complete

before_install:
  # First a Compile docker that will deliver the .deb an .so file
  - docker build --file $DOCKERFILE_COMPILE -t $IMAGE_COMPILE --build-arg VERSION --build-arg NGINX_VERSION --build-arg NGINX_FULL_VERSION --build-arg MODSECURITY --build-arg MODSECURITY_RELEASE .
  - docker run -d -p 127.0.0.1:80:8080 --name $RUN_IMAGE_NAME_COMPILE $IMAGE_COMPILE      # Test is build is running
  - docker ps -a
  - curl http://127.0.0.1/nginx_status                                          # This URL is configured in the docker
  - docker logs $RUN_IMAGE_NAME_COMPILE
  - mkdir deb
  - docker cp $RUN_IMAGE_NAME_COMPILE:/ModSecurity/modsecurity_${MODSECURITY}-${MODSECURITY_RELEASE}_amd64.deb deb/
  - docker cp $RUN_IMAGE_NAME_COMPILE:/usr/share/nginx/modules/ngx_http_modsecurity_module.so deb/
  - docker cp $RUN_IMAGE_NAME_COMPILE:/tmp/nginx-module-modsecurity3_${NGINX_VERSION}.deb deb/
  - ls -l deb/
  - docker stop $RUN_IMAGE_NAME_COMPILE
  # From here the production docker is build
  - docker build --file $DOCKERFILE -t $IMAGE_NAME --build-arg VERSION --build-arg NGINX_VERSION --build-arg NGINX_FULL_VERSION --build-arg MODSECURITY --build-arg MODSECURITY_RELEASE .
  - docker run -d -p 127.0.0.1:80:8080 --name $RUN_IMAGE_NAME $IMAGE_NAME      # Test is build is running
  - docker ps -a
  - curl http://127.0.0.1/nginx_status || true                               # This URL is configured in the docker
  - curl http://127.0.0.1?testparam=test || true
  - docker logs $RUN_IMAGE_NAME
  - echo "$DOCKERHUB_PASSWD" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin docker.io
  - docker tag "$IMAGE_NAME" "docker.io/${IMAGE_NAME}:latest"
  - docker tag "$IMAGE_NAME" "docker.io/${IMAGE_NAME}:${VERSION}"

deploy:
  - provider: script
    script: docker push "docker.io/${IMAGE_NAME}:latest"
    on:
      branch: master
  - provider: script
    script: docker push "docker.io/${IMAGE_NAME}:${VERSION}"
    on:
      branch: master
  - provider: releases
    api_key: ${GH_TOKEN}
    file: deb/nginx-module-modsecurity3_${NGINX_VERSION}.deb
    skip_cleanup: true
    on:
      tags: true
  - provider: releases
    api_key: ${GH_TOKEN}
    file: deb/modsecurity_${MODSECURITY}-${MODSECURITY_RELEASE}_amd64.deb
    skip_cleanup: true
    on:
      tags: true

after_script:
  - docker pull "docker.io/${IMAGE_NAME}:latest"
