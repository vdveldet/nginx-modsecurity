sudo: required
language: python

services:
  - docker

matrix:
  include:
  - python:
    env:
      - NAME="NGINX Container"
      - RUN_IMAGE_NAME=nginx-modsecurity
      - IMAGE_NAME=vdveldet/nginx-modsecurity
      - IMAGE_COMPILE=nginx-compile
      - DOCKERFILE_COMPILE=Dockerfile_compile
      - VERSION=0.1
      - NGINX_VERSION=1.17.3
      - MODSECURITY=3

install: true

script: pytest || true ? # This is needed for the build to complete

before_install:
  # First a Compile docker that will deliver the .deb an .so file
  - docker build --file $DOCKERFILE_COMPILE -t $IMAGE_COMPILE --build-arg VERSION=${VERSION} --build-arg NGINX_VERSION=${NGINX_VERSION} --build-arg MODSECURITY=${MODSECURITY} .
  - docker run -d -p 127.0.0.1:80:80 --name $RUN_IMAGE_NAME $IMAGE_COMPILE      # Test is build is running
  - docker ps -a
  - curl http://127.0.0.1/nginx_status                                          # This URL is configured in the docker
  - docker logs $RUN_IMAGE_NAME
  - mkdir deb
  - docker cp $RUN_IMAGE_NAME:/ModSecurity/*.deb deb/
  - docker cp $RUN_IMAGE_NAME:/ModSecurity-nginx/nginx-${NGINX_VERSION}/objs/ngx_http_modsecurity_module.so deb/
  - ls -l deb/
  # From here the porduction docker is build
  - docker build --file $DOCKERFILE -t $IMAGE_NAME .
  - echo "$DOCKERHUB_PASSWD" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin docker.io
  - docker tag "$IMAGE_NAME" "docker.io/${IMAGE_NAME}:latest"
  - docker tag "$IMAGE_NAME" "docker.io/${IMAGE_NAME}:${VERSION}"

deploy:
  - provider: script
    script: docker push "docker.io/${IMAGE_NAME}:latest"
    on:
      branch: master
  - provider: script
    script: docker push "docker.io/${IMAGE_NAME}:${VERSION}"
    on:
      branch: master

after_script:
  - docker pull "docker.io/${IMAGE_NAME}:latest"
